<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.cem.modules.cem.dao.TaskDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.cem.modules.cem.entity.TaskEntity" id="taskMap">
        <result property="id" column="id"/>
        <result property="taskName" column="task_name"/>
        <result property="serviceType" column="service_type"/>
        <result property="schPolicyId" column="sch_policy_id"/>
        <result property="parameter" column="parameter"/>
        <result property="alarmTemplateId" column="alarm_template_id"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
		<result property="atName" column="at_name"/>
		<result property="spName" column="sp_name"/>
		<result property="countDispatch" column="count_dispatch"/>
    </resultMap>

	<select id="queryObject" resultType="io.cem.modules.cem.entity.TaskEntity">
		select * from task where id = #{value}
	</select>

	<select id="queryList" resultType="io.cem.modules.cem.entity.TaskEntity">
	select * from task
	<choose>
		<when test="sidx != null and sidx.trim() != ''">
			order by ${sidx} ${order}
		</when>
		<otherwise>
			order by id desc
		</otherwise>
	</choose>
	<if test="offset != null and limit != null">
		limit #{offset}, #{limit}
	</if>
</select>

	<select id="queryTaskList" resultMap="taskMap">
		select task.*,
		schedule_policy.sp_name,
		alarm_template.at_name
		FROM task
		LEFT JOIN alarm_template
		ON task.alarm_template_id = alarm_template.id
		LEFT JOIN schedule_policy
		ON task.sch_policy_id = schedule_policy.id
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from task 
	</select>
	 
	<insert id="save" parameterType="io.cem.modules.cem.entity.TaskEntity" useGeneratedKeys="true" keyProperty="id">
		insert into task
		(
			`task_name`, 
			`service_type`, 
			`sch_policy_id`, 
			`parameter`, 
			`alarm_template_id`, 
			`is_deleted`, 
			`remark`, 
			`create_time`
		)
		values
		(
			#{taskName}, 
			#{serviceType}, 
			#{schPolicyId}, 
			#{parameter}, 
			#{alarmTemplateId}, 
			#{isDeleted}, 
			#{remark}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.cem.modules.cem.entity.TaskEntity">
		update task 
		<set>
			<if test="taskName != null">`task_name` = #{taskName}, </if>
			<if test="serviceType != null">`service_type` = #{serviceType}, </if>
			<if test="schPolicyId != null">`sch_policy_id` = #{schPolicyId}, </if>
			<if test="parameter != null">`parameter` = #{parameter}, </if>
			<if test="alarmTemplateId != null">`alarm_template_id` = #{alarmTemplateId}, </if>
			<if test="isDeleted != null">`is_deleted` = #{isDeleted}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from task where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from task where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>