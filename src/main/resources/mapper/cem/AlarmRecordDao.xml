<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.cem.modules.cem.dao.AlarmRecordDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.cem.modules.cem.entity.AlarmRecordEntity" id="alarmRecordMap">
        <result property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="level" column="level"/>
        <result property="status" column="status"/>
        <result property="probeId" column="probe_id"/>
        <result property="taskId" column="task_id"/>
        <result property="recordId" column="record_id"/>
        <result property="serviceType" column="service_type"/>
        <result property="targetType" column="target_type"/>
        <result property="targetId" column="target_id"/>
        <result property="recordTime" column="record_time"/>
        <result property="remark" column="remark"/>
		<result property="probeName" column="probe_name"/>
		<result property="dataName" column="data_name"/>
		<result property="targetName" column="target_name"/>
    </resultMap>

	<select id="queryObject" resultType="io.cem.modules.cem.entity.AlarmRecordEntity">
		SELECT alarm_record.*,
            probe.probe_name    AS probe_name,
            dic_data.data_name AS data_name,
            target.target_name AS target_name
        FROM alarm_record
            LEFT JOIN probe
                ON alarm_record.probe_id = probe.id
            LEFT JOIN dic_data
                ON (alarm_record.service_type = dic_data.data_id AND dic_data.dic_type_id=5 )
            LEFT JOIN target
                ON alarm_record.target_id = target.id

        WHERE alarm_record.id = #{value}
	</select>

	<select id="queryList" resultType="io.cem.modules.cem.entity.AlarmRecordEntity">
		select * from alarm_record
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>


	<select id="queryAlarmRecordList" resultMap="alarmRecordMap">
		SELECT alarm_record.*,
		probe.probe_name AS probe_name
		FROM alarm_record
		INNER JOIN probe
		ON alarm_record.probe_id = probe.id
		WHERE alarm_record.id IS NOT NULL
		<if test="startDate != null and startDate != '' and terminalDate != null and terminalDate != '' ">
			AND alarm_record.record_time BETWEEN #{startDate} AND #{terminalDate}
		</if>
		<if test="type != null and type != ''">
			AND alarm_record.type = #{type}
		</if>
		<if test="level != null and level != ''">
			AND alarm_record.level = #{level}
		</if>
		<if test="status != null and status != ''">
			AND alarm_record.status = #{status}
		</if>

		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by probe.id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>


	
 	<select id="queryTotal" resultType="int">
		select count(*) from alarm_record
		WHERE id IS NOT NULL
		<if test="startDate != null and startDate != '' and terminalDate != null and terminalDate != '' ">
			AND alarm_record.record_time BETWEEN #{startDate} AND #{terminalDate}
		</if>
		<if test="type != null and type != ''">
			AND alarm_record.type = #{type}
		</if>
		<if test="level != null and level != ''">
			AND alarm_record.level = #{level}
		</if>
		<if test="status != null and status != ''">
			AND alarm_record.status = #{status}
		</if>
	</select>
	 
	<insert id="save" parameterType="io.cem.modules.cem.entity.AlarmRecordEntity" useGeneratedKeys="true" keyProperty="id">
		insert into alarm_record
		(
			`type`, 
			`level`, 
			`status`, 
			`probe_id`, 
			`task_id`, 
			`record_id`, 
			`service_type`, 
			`target_type`, 
			`target_id`, 
			`record_time`, 
			`remark`
		)
		values
		(
			#{type}, 
			#{level}, 
			#{status}, 
			#{probeId}, 
			#{taskId}, 
			#{recordId}, 
			#{serviceType}, 
			#{targetType}, 
			#{targetId}, 
			#{recordTime}, 
			#{remark}
		)
	</insert>
	 
	<update id="update" parameterType="io.cem.modules.cem.entity.AlarmRecordEntity">
		update alarm_record 
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="level != null">`level` = #{level}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="probeId != null">`probe_id` = #{probeId}, </if>
			<if test="taskId != null">`task_id` = #{taskId}, </if>
			<if test="recordId != null">`record_id` = #{recordId}, </if>
			<if test="serviceType != null">`service_type` = #{serviceType}, </if>
			<if test="targetType != null">`target_type` = #{targetType}, </if>
			<if test="targetId != null">`target_id` = #{targetId}, </if>
			<if test="recordTime != null">`record_time` = #{recordTime}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where id = #{id}
	</update>

	<update id="operate" parameterType="Integer">
		update alarm_record
		<set>
			`status` = 1
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from alarm_record where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from alarm_record where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


</mapper>