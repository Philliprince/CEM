<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.cem.modules.cem.dao.TaskDispatchDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.cem.modules.cem.entity.TaskDispatchEntity" id="taskDispatchMap">
        <result property="id" column="id"/>
        <result property="taskId" column="task_id"/>
        <result property="probeId" column="probe_id"/>
        <result property="probePort" column="probe_port"/>
        <result property="target" column="target"/>
        <result property="targetGroup" column="target_group"/>
        <result property="isOndemand" column="is_ondemand"/>
        <result property="testNumber" column="test_number"/>
        <result property="testInterval" column="test_interval"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
		<result property="probeName" column="probe_name"/>
		<result property="accessLayer" column="access_layer"/>
		<result property="location" column="location"/>
    </resultMap>

	<select id="queryObject" resultType="io.cem.modules.cem.entity.TaskDispatchEntity">
		select * from task_dispatch where id = #{value}
	</select>

	<select id="queryList" resultType="io.cem.modules.cem.entity.TaskDispatchEntity">
		select * from task_dispatch
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryDispatchList" resultMap="taskDispatchMap">
		select task_dispatch.*,
		probe.probe_name,
		probe.access_layer,
		probe.location
		from task_dispatch
		INNER JOIN probe
		ON task_dispatch.probe_id = probe.id
		WHERE task_id = #{value}
		order by id desc
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from task_dispatch 
	</select>
	 
	<insert id="save" parameterType="io.cem.modules.cem.entity.TaskDispatchEntity" useGeneratedKeys="true" keyProperty="id">
		insert into task_dispatch
		(
			`task_id`, 
			`probe_id`, 
			`probe_port`, 
			`target`, 
			`target_group`, 
			`is_ondemand`, 
			`test_number`, 
			`test_interval`, 
			`status`, 
			`remark`
		)
		values
		(
			#{taskId}, 
			#{probeId}, 
			#{probePort}, 
			#{target}, 
			#{targetGroup}, 
			#{isOndemand}, 
			#{testNumber}, 
			#{testInterval}, 
			#{status}, 
			#{remark}
		)
	</insert>
	 
	<update id="update" parameterType="io.cem.modules.cem.entity.TaskDispatchEntity">
		update task_dispatch 
		<set>
			<if test="taskId != null">`task_id` = #{taskId}, </if>
			<if test="probeId != null">`probe_id` = #{probeId}, </if>
			<if test="probePort != null">`probe_port` = #{probePort}, </if>
			<if test="target != null">`target` = #{target}, </if>
			<if test="targetGroup != null">`target_group` = #{targetGroup}, </if>
			<if test="isOndemand != null">`is_ondemand` = #{isOndemand}, </if>
			<if test="testNumber != null">`test_number` = #{testNumber}, </if>
			<if test="testInterval != null">`test_interval` = #{testInterval}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from task_dispatch where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from task_dispatch where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>