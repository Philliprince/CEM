<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.cem.modules.cem.dao.ProbeExitDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.cem.modules.cem.entity.ProbeExitEntity" id="probeExitMap">
        <result property="id" column="id"/>
        <result property="probeId" column="probe_id"/>
        <result property="port" column="port"/>
        <result property="exit" column="exit"/>
        <result property="status" column="status"/>
		<result property="probeName" column="probe_name"/>
    </resultMap>

	<select id="queryObject" resultType="io.cem.modules.cem.entity.ProbeExitEntity">
		select probe_exit.*,
		probe.probe_name AS probe_name
		from probe_exit
		LEFT JOIN probe
		ON probe_exit.probe_id = probe.id
		where probe_exit.id = #{value}
	</select>

	<select id="queryList" resultType="io.cem.modules.cem.entity.ProbeExitEntity">
		select probe_exit.*,
		probe.probe_name AS probe_name
		from probe_exit
		LEFT JOIN probe
		ON probe_exit.probe_id = probe.id
		WHERE probe_exit.id IS NOT NULL
		<if test="exit != null and exit != ''">
			AND probe_exit.exit LIKE concat('%',#{exit},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryNameExist" resultType="int">
		select count(*) from probe_exit
		where probe_exit.exit = #{exit}
	</select>

	<select id="queryUpdate" resultType="int">
		select count(*) from probe_exit
		where probe_exit.exit = #{0}
		AND probe_exit.id != #{1}
	</select>

	<select id="queryProbeExist" resultType="int">
		select count(*) from probe_exit
		where probe_exit.probe_id = #{probeId}
	</select>

	<select id="queryPortExist" resultType="int">
		select count(*) from probe_exit
		where probe_exit.port = #{port}
	</select>

	<select id="queryscoreList" resultType="io.cem.modules.cem.entity.ProbeExitEntity">
		select probe_exit.*,
		probe.probe_name AS probe_name
		from probe_exit
		LEFT JOIN probe
		ON probe_exit.probe_id = probe.id
		WHERE probe_exit.status=0
		<if test="exit != null and exit != ''">
			AND probe_exit.exit LIKE concat('%',#{exit},'%')
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from probe_exit
		WHERE probe_exit.id IS NOT NULL
		<if test="exit != null and exit != ''">
			AND probe_exit.exit LIKE concat('%',#{exit},'%')
		</if>
	</select>
	 
	<insert id="save" parameterType="io.cem.modules.cem.entity.ProbeExitEntity" useGeneratedKeys="true" keyProperty="id">
		insert into probe_exit
		(
			`probe_id`, 
			`port`, 
			`exit`, 
			`status`
		)
		values
		(
			#{probeId}, 
			#{port}, 
			#{exit}, 
			#{status}
		)
	</insert>
	 
	<update id="update" parameterType="io.cem.modules.cem.entity.ProbeExitEntity">
		update probe_exit 
		<set>
			<if test="probeId != null">`probe_id` = #{probeId}, </if>
			<if test="port != null">`port` = #{port}, </if>
			<if test="exit != null">`exit` = #{exit}, </if>
			<if test="status != null">`status` = #{status}</if>
		</set>
		where id = #{id}
	</update>

	<update id="operateStatus0" parameterType="Integer">
		update probe_exit
		<set>
			`status` = 1
		</set>
		where id = #{id}
	</update>

	<update id="operateStatus1" parameterType="Integer">
		update probe_exit
		<set>
			`status` = 0
		</set>
		where id = #{id}
	</update>


	<delete id="delete">
		delete from probe_exit where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from probe_exit where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>