<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.cem.modules.cem.dao.SchedulePolicyDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.cem.modules.cem.entity.SchedulePolicyEntity" id="schedulePolicyMap">
        <result property="id" column="id"/>
        <result property="spName" column="sp_name"/>
        <result property="scheduler" column="scheduler"/>
		<result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
		<result property="remark" column="remark"/>
		<result property="createTime" column="create_time"/>
    </resultMap>

	<select id="queryObject" resultType="io.cem.modules.cem.entity.SchedulePolicyEntity">
		select * from schedule_policy where id = #{value}
	</select>

	<select id="queryList" resultType="io.cem.modules.cem.entity.SchedulePolicyEntity">
		select * from schedule_policy
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from schedule_policy 
	</select>
	 
	<insert id="save" parameterType="io.cem.modules.cem.entity.SchedulePolicyEntity" useGeneratedKeys="true" keyProperty="id">
		insert into schedule_policy
		(
			`sp_name`, 
			`scheduler`, 
			`start_date`,
			`end_date`,
			`remark`,
			`create_time`
		)
		values
		(
			#{spName}, 
			#{scheduler},
			#{startDate}, 
			#{endDate},
			#{remark},
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.cem.modules.cem.entity.SchedulePolicyEntity">
		update schedule_policy 
		<set>
			<if test="spName != null">`sp_name` = #{spName}, </if>
			<if test="scheduler != null">`scheduler` = #{scheduler}, </if>
			<if test="startDate != null">`start_date` = #{startDate}, </if>
			<if test="endDate != null">`end_date` = #{endDate},</if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from schedule_policy where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from schedule_policy where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>