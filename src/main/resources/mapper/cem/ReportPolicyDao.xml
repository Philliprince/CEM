<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.cem.modules.cem.dao.ReportPolicyDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.cem.modules.cem.entity.ReportPolicyEntity" id="reportPolicyMap">
        <result property="id" column="id"/>
		<result property="report_name" column="report_name"/>
        <result property="probeId" column="probe_id"/>
        <result property="serviceType" column="service_type"/>
        <result property="queryType" column="query_type"/>
        <result property="interval" column="interval"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
		<result property="city_name" column="city_name"/>
		<result property="county_name" column="county_name"/>
		<result property="probe_name" column="probe_name"/>
    </resultMap>

	<select id="queryObject" resultType="io.cem.modules.cem.entity.ReportPolicyEntity">
		select * from report_policy where id = #{value}
	</select>

	<select id="queryList" resultType="io.cem.modules.cem.entity.ReportPolicyEntity">
		select report_policy.*,
		probe.probe_name AS probe_name,
		city.city_name AS city_name,
		county.county_name AS county_name
		from report_policy
		LEFT JOIN probe
		ON report_policy.probe_id = probe.id
		LEFT JOIN city
		ON probe.city_id = city.city_id
		LEFT JOIN county
		ON probe.county_id = county.county_id
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from report_policy 
	</select>

	<select id="queryExist" resultType="int">
		select count(*) from report_policy
		where report_name = #{reportName}
	</select>
	 
	<insert id="save" parameterType="io.cem.modules.cem.entity.ReportPolicyEntity" useGeneratedKeys="true" keyProperty="id">
		insert into report_policy
		(
			`report_name`,
			`probe_id`,
			`service_type`, 
			`query_type`, 
			`interval`, 
			`start_time`, 
			`end_time`, 
			`remark`, 
			`create_time`
		)
		values
		(
			#{reportName},
			#{probeId},
			#{serviceType}, 
			#{queryType}, 
			#{interval}, 
			#{startTime}, 
			#{endTime}, 
			#{remark}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.cem.modules.cem.entity.ReportPolicyEntity">
		update report_policy 
		<set>
			<if test="probeId != null">`probe_id` = #{probeId}, </if>
			<if test="serviceType != null">`service_type` = #{serviceType}, </if>
			<if test="queryType != null">`query_type` = #{queryType}, </if>
			<if test="interval != null">`interval` = #{interval}, </if>
			<if test="startTime != null">`start_time` = #{startTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from report_policy where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from report_policy where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>